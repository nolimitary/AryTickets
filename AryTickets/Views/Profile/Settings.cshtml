@model SettingsViewModel
@{
    ViewData["Title"] = "Settings";
    Layout = "_ProfileLayout";
}

@section Styles {
    <style>
        .delete-modal {
            transition: opacity 0.3s ease;
        }
    </style>
}

<div class="space-y-12">

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-500/20 border border-green-500 text-green-300 px-4 py-3 rounded-lg" role="alert">
            <p>@TempData["SuccessMessage"]</p>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-500/20 border border-red-500 text-red-300 px-4 py-3 rounded-lg" role="alert">
            <p>@TempData["ErrorMessage"]</p>
        </div>
    }

    <div class="bg-gray-800 p-8 rounded-xl shadow-lg">
        <h3 class="text-2xl font-bold mb-1">Profile Information</h3>
        <p class="text-gray-400 mb-6">Update your account's profile information and email address.</p>
        <form asp-action="UpdateProfile" method="post" class="space-y-4">
            <div>
                <label asp-for="Username" class="text-sm font-medium text-gray-300"></label>
                <input asp-for="Username" class="mt-1 block w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:ring-indigo-500 focus:border-indigo-500">
            </div>
            <div>
                <label asp-for="Email" class="text-sm font-medium text-gray-300"></label>
                <input asp-for="Email" class="mt-1 block w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:ring-indigo-500 focus:border-indigo-500">
            </div>
            <div class="flex justify-end">
                <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-2 px-4 rounded-lg transition-transform transform hover:scale-105">Save</button>
            </div>
        </form>
    </div>

    <div class="bg-gray-800 p-8 rounded-xl shadow-lg">
        <h3 class="text-2xl font-bold mb-1">Update Password</h3>
        <p class="text-gray-400 mb-6">Ensure your account is using a long, random password to stay secure.</p>
        <form asp-action="ChangePassword" method="post" class="space-y-4">
            <div asp-validation-summary="ModelOnly" class="text-red-400"></div>
            <div>
                <label asp-for="OldPassword" class="text-sm font-medium text-gray-300"></label>
                <input asp-for="OldPassword" type="password" class="mt-1 block w-full bg-gray-700 border-gray-600 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
            </div>
            <div>
                <label asp-for="NewPassword" class="text-sm font-medium text-gray-300"></label>
                <input asp-for="NewPassword" type="password" class="mt-1 block w-full bg-gray-700 border-gray-600 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
            </div>
            <div>
                <label asp-for="ConfirmPassword" class="text-sm font-medium text-gray-300"></label>
                <input asp-for="ConfirmPassword" type="password" class="mt-1 block w-full bg-gray-700 border-gray-600 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
            </div>
            <div class="flex justify-end">
                <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-2 px-4 rounded-lg transition-transform transform hover:scale-105">Save Password</button>
            </div>
        </form>
    </div>

    <div class="bg-gray-800 p-8 rounded-xl shadow-lg border border-red-500/30">
        <h3 class="text-2xl font-bold text-red-400 mb-1">Delete Account</h3>
        <p class="text-gray-400 mb-6">Once your account is deleted, all of its resources and data will be permanently deleted. This action cannot be undone.</p>
        <button id="delete-account-button" class="bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-lg transition-transform transform hover:scale-105">Delete Account</button>
    </div>
</div>

<div id="delete-modal" class="delete-modal fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center p-4 z-50 opacity-0 pointer-events-none">
    <div class="bg-gray-800 rounded-xl shadow-2xl p-8 max-w-md w-full border border-red-500/50">
        <h3 class="text-2xl font-bold text-red-400">Are you absolutely sure?</h3>
        <p class="text-gray-400 mt-4">This action cannot be undone. This will permanently delete your account and all associated data.</p>
        <p class="text-gray-400 mt-2">Please type your username <strong class="text-white">@Model.Username</strong> to confirm.</p>
        <input id="delete-confirm-input" type="text" class="mt-4 block w-full bg-gray-700 border-gray-600 rounded-md" placeholder="Type your username here">

        <div class="mt-6 flex justify-end space-x-4">
            <button id="cancel-delete-button" class="bg-gray-600 hover:bg-gray-500 text-white font-semibold py-2 px-4 rounded-lg">Cancel</button>
            <form asp-action="DeleteAccount" method="post">
                <button id="confirm-delete-button" type="submit" class="bg-red-700 text-white font-semibold py-2 px-4 rounded-lg opacity-50 cursor-not-allowed" disabled>Delete Account</button>
            </form>
        </div>
    </div>
</div>

@section PageScripts {
    <script>
        const deleteModal = document.getElementById('delete-modal');
        const deleteButton = document.getElementById('delete-account-button');
        const cancelDeleteButton = document.getElementById('cancel-delete-button');
        const confirmDeleteButton = document.getElementById('confirm-delete-button');
        const confirmInput = document.getElementById('delete-confirm-input');
        const requiredUsername = "@Model.Username";

        deleteButton.addEventListener('click', () => {
            deleteModal.classList.remove('opacity-0', 'pointer-events-none');
        });

        cancelDeleteButton.addEventListener('click', () => {
            deleteModal.classList.add('opacity-0', 'pointer-events-none');
            confirmInput.value = "";
            confirmDeleteButton.disabled = true;
            confirmDeleteButton.classList.add('opacity-50', 'cursor-not-allowed');
        });

        confirmInput.addEventListener('input', () => {
            if (confirmInput.value === requiredUsername) {
                confirmDeleteButton.disabled = false;
                confirmDeleteButton.classList.remove('opacity-50', 'cursor-not-allowed');
            } else {
                confirmDeleteButton.disabled = true;
                confirmDeleteButton.classList.add('opacity-50', 'cursor-not-allowed');
            }
        });
    </script>
}