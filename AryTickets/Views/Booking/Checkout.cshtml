@model CheckoutViewModel
@{
    ViewData["Title"] = "Checkout";
    Layout = "_Layout";
}

@section Styles {
    <style>
        .payment-overlay {
            background-color: rgba(17, 24, 39, 0.9);
            backdrop-filter: blur(5px);
            transition: opacity 0.4s ease-in-out;
        }

        .spinner {
            border-color: rgba(79, 70, 229, 0.2);
            border-top-color: #A5B4FC;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }

        .checkmark-circle {
            stroke-dasharray: 166;
            stroke-dashoffset: 166;
            animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
        }

        .checkmark-check {
            transform-origin: 50% 50%;
            stroke-dasharray: 48;
            stroke-dashoffset: 48;
            animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
        }

        @@keyframes stroke {
            100% {
                stroke-dashoffset: 0;
            }
        }
    </style>
}

<div class="container mx-auto px-6 py-16 min-h-screen">
    <div class="pt-24 max-w-4xl mx-auto">
        <h1 class="text-4xl font-extrabold text-center">Final Step: Secure Checkout</h1>
        <p class="text-gray-400 text-center mt-2">Complete your booking for @Model.MovieTitle</p>

        <div class="mt-12 grid grid-cols-1 md:grid-cols-2 gap-12">
            <div class="bg-gray-800 p-8 rounded-xl">
                <h3 class="text-2xl font-bold mb-6">Order Summary</h3>
                <div class="space-y-4">
                    <div class="flex justify-between"><span class="text-gray-400">Movie:</span> <span class="font-semibold">@Model.MovieTitle</span></div>
                    <div class="flex justify-between"><span class="text-gray-400">Showtime:</span> <span class="font-semibold">@Model.Showtime</span></div>
                    <div class="flex justify-between"><span class="text-gray-400">Seats:</span> <span class="font-semibold">@Model.SelectedSeats</span></div>
                    <div class="border-t border-gray-700 my-4"></div>
                    <div class="flex justify-between text-xl"><span class="text-gray-400">Total:</span> <span class="font-bold text-indigo-400">$@Model.TotalPrice.ToString("F2")</span></div>
                </div>
            </div>

            <div class="bg-gray-800 p-8 rounded-xl">
                <h3 class="text-2xl font-bold mb-6">Payment Details</h3>
                <form id="payment-form" class="space-y-4">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="MovieTitle" />
                    <input type="hidden" asp-for="Showtime" />
                    <input type="hidden" asp-for="SelectedSeats" />
                    <input type="hidden" asp-for="TotalPrice" />
                    <div>
                        <label asp-for="CardHolderName" class="text-sm font-medium text-gray-300"></label>
                        <input asp-for="CardHolderName" class="mt-1 block w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white">
                    </div>
                    <div>
                        <label asp-for="CardNumber" class="text-sm font-medium text-gray-300"></label>
                        <input asp-for="CardNumber" placeholder="0000 0000 0000 0000" maxlength="16" class="mt-1 block w-full bg-gray-700 border-gray-600 rounded-md">
                    </div>
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label asp-for="ExpiryDate" class="text-sm font-medium text-gray-300"></label>
                            <input asp-for="ExpiryDate" placeholder="MM/YY" maxlength="5" class="mt-1 block w-full bg-gray-700 border-gray-600 rounded-md">
                        </div>
                        <div>
                            <label asp-for="Cvc" class="text-sm font-medium text-gray-300"></label>
                            <input asp-for="Cvc" placeholder="123" maxlength="4" class="mt-1 block w-full bg-gray-700 border-gray-600 rounded-md">
                        </div>
                    </div>
                    <div class="pt-4">
                        <button type="submit" class="w-full bg-indigo-600 text-white font-bold py-3 px-8 rounded-full text-lg">Pay $@Model.TotalPrice.ToString("F2")</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div id="payment-overlay" class="payment-overlay fixed inset-0 z-50 flex flex-col items-center justify-center text-white opacity-0 pointer-events-none">
    <div id="spinner-container">
        <div class="spinner w-16 h-16 rounded-full border-4"></div>
        <p class="mt-4 text-xl">Processing Payment...</p>
    </div>
    <div id="success-container" class="text-center hidden">
        <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52" width="100px" height="100px">
            <circle class="checkmark-circle" cx="26" cy="26" r="25" fill="none" stroke="#4F46E5" stroke-width="4" />
            <path class="checkmark-check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8" stroke="#A5B4FC" stroke-width="5" />
        </svg>
        <h2 class="text-3xl font-bold mt-4">Payment Confirmed!</h2>
        <p class="text-gray-400 mt-2">Your tickets have been sent to your account email.</p>
        <a asp-controller="Home" asp-action="Index" class="mt-8 inline-block bg-indigo-600 text-white font-semibold py-2 px-6 rounded-lg">Back to Home</a>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('payment-form').addEventListener('submit', async function (e) {
            e.preventDefault();

            const overlay = document.getElementById('payment-overlay');
            const spinner = document.getElementById('spinner-container');
            const success = document.getElementById('success-container');

            overlay.classList.remove('opacity-0', 'pointer-events-none');
            spinner.classList.remove('hidden');
            success.classList.add('hidden');

            const form = e.target;
            const formData = new FormData(form);

            const response = await fetch(form.action, {
                method: 'POST',
                body: formData,
            });

            const result = await response.json();

            if (result.success) {
                spinner.classList.add('hidden');
                success.classList.remove('hidden');
            } else {
                overlay.classList.add('opacity-0', 'pointer-events-none');
                alert('Payment failed. Please try again.');
            }
        });
    </script>
}